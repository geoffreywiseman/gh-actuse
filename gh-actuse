#! /bin/bash
repo_total=0

print_repo_usage() {
    local wf_ids
    local repo_name

    if ! repo_name=$(gh repo view "$1" --json name,owner --jq '( .owner.login + "/" + .name )' 2> /dev/null); then
        printf "Can't find repo: %s\\n" "$1"
        exit 1
    fi

    printf "\\nRepo %s:\\n" "${repo_name}"
    wf_ids=$(gh api "/repos/${repo_name}/actions/workflows" --jq ".workflows[].id")
    for wfid in $wf_ids
    do
        print_wf_usage "$repo_name" "$wfid"
    done

    print_human_usage "- Total" $repo_total
}

print_wf_usage() {
    local wf_id
    local wf_name
    local ms_lines
    local wf_total

    repo=$1
    wf_id=$2
    wf_name=$(gh api "/repos/${repo}/actions/workflows/$wf_id" --jq ".name")
    ms_lines=$(gh api "/repos/${repo}/actions/workflows/$wf_id/timing" --jq ".billable[].total_ms")
    wf_total=0

    for ms_line in $ms_lines
    do
        wf_total=$(( wf_total + ms_line ))
        repo_total=$(( repo_total + ms_line ))
    done

    print_human_usage "- Workflow '$wf_name'" $wf_total
}

print_human_usage() {
    local prefix=$1
    local usage=$2

    if (( usage < 1000 )); then
        printf "%s Usage: %sms\\n" "$prefix" "$usage"
    elif (( usage < 60000 )); then
        printf "%s Usage: %ss\\n" "$prefix" $((usage / 1000))
    elif (( usage < 3600000 )); then
        printf "%s Usage: %sm\\n" "$prefix" $((usage / 60000))
    else 
        printf "%s Usage: %sh (%sm)\\n" "$prefix" $((usage / 3600000)) $((usage / 60000))
    fi
}

parse_and_run() {
    printf "GitHub Actions Usage\\n"
    if (( "$#" == 0 )); then
        print_repo_usage "{owner}/{repo}"
    else
        while (( "$#" )); do
            print_repo_usage "$1"
            shift
        done
    fi
}

parse_and_run "$@"